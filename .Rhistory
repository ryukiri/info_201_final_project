df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv')
# light grey boundaries
l <- list(color = toRGB("grey"), width = 0.5)
install.packages("plotly")
library(plotly)
library(plotly)
packageVersion('plotly')
warnings()
base.url <- 'https://congress.api.sunlightfoundation.com/districts/locate?'
query.params <- list(zip =92620)
response <- GET(base.url, query = query.params)
body <- content(response, "text")
data <- fromJSON(body)3
base.url <- 'https://congress.api.sunlightfoundation.com/districts/locate?'
query.params <- list(zip =92620)
response <- GET(base.url, query = query.params)
body <- content(response, "text")
data <- fromJSON(body)
library(jsonlite)
library(httr)
library(dplyr)
library(knitr)
base.url <- 'https://congress.api.sunlightfoundation.com/districts/locate?'
query.params <- list(zip =92620)
response <- GET(base.url, query = query.params)
body <- content(response, "text")
data <- fromJSON(body)
data
flatten(results)
flatten(data)
response <- GET(base.url, query = query.params)
body <- content(response, "text")
results <- fromJSON(body)
flattened <- flatten(results$results)
flattened
flattened$district
base.url.legislators <- 'https://congress.api.sunlightfoundation.com/legislators/locate?'
query.params.legislators <- list(zip = 92620)
response.legislators <- GET(base.url, query = query.params)
body.legislators <- content(response, "text")
results.legislators <- fromJSON(body)
results.legislators
base.url.legislators <- 'https://congress.api.sunlightfoundation.com/legislators/locate?'
query.params.legislators <- list(zip = 92620)
response.legislators <- GET(base.url.legislators, query = query.params.legislators)
body.legislators <- content(response.legislators, "text")
results.legislators <- fromJSON(body.legislators)
results.legislators
flattened.legislators <- flatten(results.legislators$results)
flattened.legislators
View(flattened.legislators)
kable(flattened.legislators)
View(flattened.legislators %>% filter(first_name, last_name))
flattened.legislators.filtered <- flattened.legislators %>% filter(first_name, last_name)
flattened.legislators.filtered <- flattened.legislators %>% filter('first_name', 'last_name')
flattened.legislators.filtered <- filter('flattened.legislators', 'first_name', 'last_name')
flattened.legislators.filtered <- filter(flattened.legislators, 'first_name', 'last_name')
flattened.legislators.filtered <- select(flattened.legislators, 'first_name', 'last_name')
flattened.legislators.filtered <- select(flattened.legislators, first_name, last_name)
View(flattened.legislators.filtered)
flattened.legislators.filtered <- select(flattened.legislators, first_name, last_name, title, party, phone, website, twitter_id)
View(flattened.legislators.filtered)
flattened.legislators.filtered <- select(flattened.legislators, first_name, last_name, title, party, chamber, phone, website, twitter_id)
kable(flattened.legislators.filtered)
flattened.legislators.filtered <- select(flattened.legislators, mutate(flattened.legislators, First = first_name), last_name, title, party, chamber, phone, website, twitter_id)
mutate(flattened.legislators.filtered, first = first_name)
mutate(flattened.legislators.filtered, First Name = first_name)
rename(flattened.legislators.filtered, replace = c("first_name" = ""First Name))
rename(flattened.legislators.filtered, replace = c("first_name" = First Name""))
rename(flattened.legislators.filtered, replace = c(`first_name` = "First Name"))
mutate(flattened.legislators.filtered, First = first_name, Last = last_name, Title = title, Party = party, Chamber = chamber, Phone = phone, Website = website, Twitter = twitter_id)
flattened.legislators <- flatten(results.legislators$results)
flattened.legislators.filtered <- mutate(flattened.legislators, First = first_name, Last = last_name, Title = title, Party = party, Chamber = chamber, Phone = phone, Website = website, Twitter = twitter_id)
flattened.legislators.filtered
flattened.legislators.filtered.select <- select(flattened.legislators, first_name, last_name, title, party, chamber, phone, website, twitter_id)
View(flattened.legislators.filtered.select)
flattened.legislators.filtered <- mutate(flattened.legislators, First = first_name, Last = last_name, Title = title, Party = party, Chamber = chamber, Phone = phone, Website = website, Twitter = twitter_id)
flattened.legislators.filtered.select <- select(flattened.legislators, First, Last, Title, Party, Chamber, Phone, Website, Twitter
f
flattened.legislators.filtered <- mutate(flattened.legislators, First = first_name, Last = last_name, Title = title, Party = party, Chamber = chamber, Phone = phone, Website = website, Twitter = twitter_id)
flattened.legislators.filtered.select <- select(flattened.legislators, First, Last, Title, Party, Chamber, Phone, Website, Twitter)
flattened.legislators.filtered <- mutate(flattened.legislators, First = first_name, Last = last_name, Title = title, Party = party, Chamber = chamber, Phone = phone, Website = website, Twitter = twitter_id)
flattened.legislators.filtered.select <- select(flattened.legislators.filtered, First, Last, Title, Party, Chamber, Phone, Website, Twitter)
View(flattened.legislators.filtered.select)
kable(flattened.legislators.filtered.select)
.
kable(flattened.legislators.filtered.select)
.
kable(flattened.legislators.filtered.select)
base.url.committee <- 'https://congress.api.sunlightfoundation.com/committees/locate?'
query.params.committee <- list(query = K00210)
response.committee <- GET(base.url.committee, query = query.params.committee)
body.committee <- content(response.committee, "text")
results.committee <- fromJSON(body.committee)
flattened.committee <- flatten(results.committee$results)
base.url.committee <- 'https://congress.api.sunlightfoundation.com/committees/locate?'
query.params.committee <- list(query = K000210)
query.params.committee <- list(query = 'K000210')
response.committee <- GET(base.url.committee, query = query.params.committee)
body.committee <- content(response.committee, "text")
results.committee <- fromJSON(body.committee)
flattened.committee <- flatten(results.committee$results)
results.committee <- fromJSON(body.committee)
body.committee
response.committee
shiny::runApp('C:/Users/Austin Quach/Google Drive/College/Sophomore/Info 201/Class/m18-shiny/demo-2')
runApp('C:/Users/Austin Quach/Google Drive/College/Sophomore/Info 201/Class/m18-shiny/demo-3')
runApp('C:/Users/Austin Quach/Google Drive/College/Sophomore/Info 201/Class/m18-shiny/exercise-3')
install.packages("plotlyOutput")
install.packages("plotly")
install.packages("plotlyOutput")
shiny::runApp('C:/Users/Austin Quach/Google Drive/College/Sophomore/Info 201/Homework/a8-building-apps-ryukiri')
runApp('C:/Users/Austin Quach/Google Drive/College/Sophomore/Info 201/Homework/a8-building-apps-ryukiri')
runApp('C:/Users/Austin Quach/Google Drive/College/Sophomore/Info 201/Homework/a8-building-apps-ryukiri')
runApp('C:/Users/Austin Quach/Google Drive/College/Sophomore/Info 201/Class/m18-shiny/exercise-5')
runApp('C:/Users/Austin Quach/Google Drive/College/Sophomore/Info 201/Homework/a8-building-apps-ryukiri')
setwd("C:/Users/Austin Quach/Google Drive/College/Sophomore/Info 201/Homework/info_201_final_project")
songs.2016 <- read.csv("Songs/Songs - 2016.csv")
features.2016 <- read.csv("features/features.2016.csv")
features.2016 <- read.csv("features/features.2016.csv")
features.2015 <- read.csv("features/features.2015.csv")
features.2014 <- read.csv("features/features.2014.csv")
features.2013 <- read.csv("features/features.2013.csv")
features.2012 <- read.csv("features/features.2012.csv")
features.2011 <- read.csv("features/features.2011.csv")
features.2010 <- read.csv("features/features.2010.csv")
features.2009 <- read.csv("features/features.2009.csv")
features.2008 <- read.csv("features/features.2008.csv")
shiny::runApp('test')
source("functions/GetSongData.R")
runApp()
source("functions/GetSongData.R")
features.2016 <- as.data.frame(do.call(rbind, lapply(songs.2016$Spotify.ID, getAudioFeatures) ))
keys <- spotifyOAuth("Info 201","ae706b417cc645f78c559186204dadd4","5f5769652ae24ceca43e05074b8b84eb")
features.2016 <- as.data.frame(do.call(rbind, lapply(songs.2016$Spotify.ID, getAudioFeatures) ))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
merge.2016 <- features.2016 %>%
mutate(Spotify.ID = id) %>%
left_join(songs.2016, by = 'Spotify.ID')
songs.2016 <- read.csv("Songs/Songs - 2016.csv")
songs.2015 <- read.csv("Songs/Songs - 2015.csv")
songs.2014 <- read.csv("Songs/Songs - 2014.csv")
songs.2013 <- read.csv("Songs/Songs - 2013.csv")
songs.2012 <- read.csv("Songs/Songs - 2012.csv")
songs.2011 <- read.csv("Songs/Songs - 2011.csv")
songs.2010 <- read.csv("Songs/Songs - 2010.csv")
songs.2009 <- read.csv("Songs/Songs - 2009.csv")
songs.2008 <- read.csv("Songs/Songs - 2008.csv")

features.2016 <- as.data.frame(do.call(rbind, lapply(songs.2016$Spotify.ID, getAudioFeatures) ))
features.2015 <- as.data.frame(do.call(rbind, lapply(songs.2015$Spotify.ID, getAudioFeatures) ))
features.2014 <- as.data.frame(do.call(rbind, lapply(songs.2014$Spotify.ID, getAudioFeatures) ))
features.2013 <- as.data.frame(do.call(rbind, lapply(songs.2013$Spotify.ID, getAudioFeatures) ))
features.2012 <- as.data.frame(do.call(rbind, lapply(songs.2012$Spotify.ID, getAudioFeatures) ))
features.2011 <- as.data.frame(do.call(rbind, lapply(songs.2011$Spotify.ID, getAudioFeatures) ))
features.2010 <- as.data.frame(do.call(rbind, lapply(songs.2010$Spotify.ID, getAudioFeatures) ))
features.2009 <- as.data.frame(do.call(rbind, lapply(songs.2009$Spotify.ID, getAudioFeatures) ))
features.2008 <- as.data.frame(do.call(rbind, lapply(songs.2008$Spotify.ID, getAudioFeatures) ))
setwd("~/Documents/Info 201/info_201_final_project")
setwd("~/Documents/Info 201/info_201_final_project")
source("functions/GetSongData.R")
features.2016 <- as.data.frame(do.call(rbind, lapply(songs.2016$Spotify.ID, getAudioFeatures) ))
features.2015 <- as.data.frame(do.call(rbind, lapply(songs.2015$Spotify.ID, getAudioFeatures) ))
features.2014 <- as.data.frame(do.call(rbind, lapply(songs.2014$Spotify.ID, getAudioFeatures) ))
features.2013 <- as.data.frame(do.call(rbind, lapply(songs.2013$Spotify.ID, getAudioFeatures) ))
features.2012 <- as.data.frame(do.call(rbind, lapply(songs.2012$Spotify.ID, getAudioFeatures) ))
features.2011 <- as.data.frame(do.call(rbind, lapply(songs.2011$Spotify.ID, getAudioFeatures) ))
features.2010 <- as.data.frame(do.call(rbind, lapply(songs.2010$Spotify.ID, getAudioFeatures) ))
features.2009 <- as.data.frame(do.call(rbind, lapply(songs.2009$Spotify.ID, getAudioFeatures) ))
features.2008 <- as.data.frame(do.call(rbind, lapply(songs.2008$Spotify.ID, getAudioFeatures) ))
library(Rspotify)
library(Rspotify)
features.2016 <- as.data.frame(do.call(rbind, lapply(songs.2016$Spotify.ID, getAudioFeatures) ))
features.2015 <- as.data.frame(do.call(rbind, lapply(songs.2015$Spotify.ID, getAudioFeatures) ))
features.2014 <- as.data.frame(do.call(rbind, lapply(songs.2014$Spotify.ID, getAudioFeatures) ))
features.2013 <- as.data.frame(do.call(rbind, lapply(songs.2013$Spotify.ID, getAudioFeatures) ))
features.2012 <- as.data.frame(do.call(rbind, lapply(songs.2012$Spotify.ID, getAudioFeatures) ))
features.2011 <- as.data.frame(do.call(rbind, lapply(songs.2011$Spotify.ID, getAudioFeatures) ))
features.2010 <- as.data.frame(do.call(rbind, lapply(songs.2010$Spotify.ID, getAudioFeatures) ))
features.2009 <- as.data.frame(do.call(rbind, lapply(songs.2009$Spotify.ID, getAudioFeatures) ))
features.2008 <- as.data.frame(do.call(rbind, lapply(songs.2008$Spotify.ID, getAudioFeatures) ))
features.2015 <- as.data.frame(do.call(rbind, lapply(songs.2015$Spotify.ID, getAudioFeatures) ))
features.2015 <- as.data.frame(do.call(rbind, lapply(songs.2015$Spotify.ID, getAudioFeatures) ))
features.2014 <- as.data.frame(do.call(rbind, lapply(songs.2014$Spotify.ID, getAudioFeatures) ))
features.2016 <- as.data.frame(do.call(rbind, lapply(songs.2016$Spotify.ID, getAudioFeatures) ))
features.2014 <- as.data.frame(do.call(rbind, lapply(songs.2014$Spotify.ID, getAudioFeatures) ))
features.2013 <- as.data.frame(do.call(rbind, lapply(songs.2013$Spotify.ID, getAudioFeatures) ))
features.2012 <- as.data.frame(do.call(rbind, lapply(songs.2012$Spotify.ID, getAudioFeatures) ))
features.2012 <- as.data.frame(do.call(rbind, lapply(songs.2012$Spotify.ID, getAudioFeatures) ))
features.2011 <- as.data.frame(do.call(rbind, lapply(songs.2011$Spotify.ID, getAudioFeatures) ))
features.2010 <- as.data.frame(do.call(rbind, lapply(songs.2010$Spotify.ID, getAudioFeatures) ))
features.2009 <- as.data.frame(do.call(rbind, lapply(songs.2009$Spotify.ID, getAudioFeatures) ))
searchArtist("BigBang")
getAlbum(4Kxlr1PRlDKEB0ekOCyHgX)
getAlbum('4Kxlr1PRlDKEB0ekOCyHgX')
getAlbums('4Kxlr1PRlDKEB0ekOCyHgX')
merge.2016 <- features.2016 %>%
mutate(Spotify.ID = id) %>%
left_join(songs.2016, by = 'Spotify.ID')
library(dplyr)
merge.2016 <- features.2016 %>%
mutate(Spotify.ID = id) %>%
left_join(songs.2016, by = 'Spotify.ID')
View(merge.2016)
merge.2016 %>% select(Song, Artist, Year, Spotify.ID, danceability, energy, tempo)
merge.2016 <- features.2016 %>%
mutate(Spotify.ID = id) %>%
left_join(songs.2016, by = 'Spotify.ID') %>%
select(Song, Artist, Year, Spotify.ID, danceability, energy, tempo)
View(merge.2016)
merge.2016 <- features.2016 %>%
mutate(Spotify.ID = id) %>%
left_join(songs.2016, by = 'Spotify.ID') %>%
select(Song, Artist, Year, Spotify.ID, danceability, energy, tempo)
merge.2015 <- features.2015 %>%
mutate(Spotify.ID= id) %>%
left_join(songs.2015, by = 'Spotify.ID') %>%
select(Song, Artist, Year, Spotify.ID, danceability, energy, tempo)
merge.2014 <- features.2014 %>%
mutate(Spotify.ID = id) %>%
left_join(songs.2014, by = 'Spotify.ID') %>%
select(Song, Artist, Year, Spotify.ID, danceability, energy, tempo)
merge.2013 <- features.2013 %>%
mutate(Spotify.ID = id) %>%
left_join(songs.2013, by = 'Spotify.ID') %>%
select(Song, Artist, Year, Spotify.ID, danceability, energy, tempo)
merge.2016 <- features.2016 %>%
mutate(Spotify.ID = id) %>%
left_join(songs.2016, by = 'Spotify.ID') %>%
select(Song, Artist, Year, Spotify.ID, danceability, energy, tempo)
merge.2015 <- features.2015 %>%
mutate(Spotify.ID= id) %>%
left_join(songs.2015, by = 'Spotify.ID') %>%
select(Song, Artist, Year, Spotify.ID, danceability, energy, tempo)
merge.2014 <- features.2014 %>%
mutate(Spotify.ID = id) %>%
left_join(songs.2014, by = 'Spotify.ID') %>%
select(Song, Artist, Year, Spotify.ID, danceability, energy, tempo)
merge.2013 <- features.2013 %>%
mutate(Spotify.ID = id) %>%
left_join(songs.2013, by = 'Spotify.ID') %>%
select(Song, Artist, Year, Spotify.ID, danceability, energy, tempo)
merge.2012 <- features.2012 %>%
mutate(Spotify.ID = id) %>%
left_join(songs.2012, by = 'Spotify.ID') %>%
select(Song, Artist, Year, Spotify.ID, danceability, energy, tempo)
merge.2011 <- features.2011 %>%
mutate(Spotify.ID = id) %>%
left_join(songs.2011, by = 'Spotify.ID') %>%
select(Song, Artist, Year, Spotify.ID, danceability, energy, tempo)
merge.2010 <- features.2010 %>%
mutate(Spotify.ID = id) %>%
left_join(songs.2010, by = 'Spotify.ID') %>%
select(Song, Artist, Year, Spotify.ID, danceability, energy, tempo)
merge.2009 <- features.2009 %>%
mutate(Spotify.ID = id) %>%
left_join(songs.2009, by = 'Spotify.ID') %>%
select(Song, Artist, Year, Spotify.ID, danceability, energy, tempo)
merge.2008 <- features.2008 %>%
mutate(Spotify.ID = id) %>%
left_join(songs.2008, by = 'Spotify.ID') %>%
select(Song, Artist, Year, Spotify.ID, danceability, energy, tempo)
write.csv(merge.2016, file="songs.merged.2016")
write.csv(merge.2016, file="songsMerged/songs.merged.2016")
write.csv(merge.2015, file="songsMerged/songs.merged.2015")
write.csv(merge.2014, file="songsMerged/songs.merged.2014")
write.csv(merge.2013, file="songsMerged/songs.merged.2013")
write.csv(merge.2012, file="songsMerged/songs.merged.2012")
write.csv(merge.2011, file="songsMerged/songs.merged.2011")
write.csv(merge.2010, file="songsMerged/songs.merged.2010")
write.csv(merge.2009, file="songsMerged/songs.merged.2009")
write.csv(merge.2008, file="songsMerged/songs.merged.2008")
kable
library(kable)
library(knitr)
kable
shiny::runApp()
setwd("~/Documents/Info 201/info_201_final_project")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()

    merged.2016 <- read.csv("songsMerged/songs.merged.2016.csv")
merged.2016 <- read.csv("songsMerged/songs.merged.2016.csv")
write.csv(merge.2016, file="songsMerged/songs.merged.2016.csv")
write.csv(merge.2015, file="songsMerged/songs.merged.2015.csv")
write.csv(merge.2014, file="songsMerged/songs.merged.2014.csv")
write.csv(merge.2013, file="songsMerged/songs.merged.2013.csv")
write.csv(merge.2012, file="songsMerged/songs.merged.2012.csv")
write.csv(merge.2011, file="songsMerged/songs.merged.2011.csv")
write.csv(merge.2010, file="songsMerged/songs.merged.2010.csv")
write.csv(merge.2009, file="songsMerged/songs.merged.2009.csv")
write.csv(merge.2008, file="songsMerged/songs.merged.2008.csv")
runApp()
merged.2016 <- read.csv("songsMerged/songs.merged.2016.csv")
kable(merged.2016)
runApp()
runApp()
runApp()
user <- getUser("ryukiri",token=keys)
user
user$id
user <- getPlaylists("ryukiri",token=keys)
user <- getPlaylist("ryukiri",token=keys)
user
getPlaylistSongs("ryukiri", "37i9dQZEVXcMRjpgmc8Ohr", token=keys)
